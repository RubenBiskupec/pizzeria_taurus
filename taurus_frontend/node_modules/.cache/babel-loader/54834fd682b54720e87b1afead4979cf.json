{"ast":null,"code":"import _asyncToGenerator from \"/home/ruben/Documents/tech-web/pizzeria-taurus/taurus_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nimport { HttpService } from \"@/services/HttpService\";\nvar httpService = new HttpService();\nexport default new Vuex.Store({\n  state: {\n    ingredients: [],\n    pizzaTypes: [],\n    sizes: [],\n    doughs: [],\n    menuPizzas: [],\n    beverages: [],\n    isAuthenticated: false,\n    token: ''\n  },\n  getters: {\n    getIngredients: function getIngredients() {\n      return this.$store.state.ingredients;\n    }\n  },\n  mutations: {\n    initialize: function initialize(state) {},\n    SET_INGREDIENTS: function SET_INGREDIENTS(state, ingredients) {\n      state.ingredients = ingredients;\n    }\n  },\n  actions: {\n    fetchIngredients: function fetchIngredients() {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return httpService.getMenuEntity(\"Ingredient\");\n\n              case 2:\n                data = _context.sent;\n                debugger;\n                commit('SET_INGREDIENTS', data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  modules: {}\n});","map":{"version":3,"sources":["/home/ruben/Documents/tech-web/pizzeria-taurus/taurus_frontend/src/store/index.js"],"names":["Vue","Vuex","use","HttpService","httpService","Store","state","ingredients","pizzaTypes","sizes","doughs","menuPizzas","beverages","isAuthenticated","token","getters","getIngredients","$store","mutations","initialize","SET_INGREDIENTS","actions","fetchIngredients","getMenuEntity","data","commit","modules"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,SAASE,WAAT,QAA4B,wBAA5B;AAEA,IAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB;AAEA,eAAe,IAAIF,IAAI,CAACI,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,EADR;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,KAAK,EAAE,EAHF;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,UAAU,EAAE,EALP;AAMLC,IAAAA,SAAS,EAAE,EANN;AAOLC,IAAAA,eAAe,EAAE,KAPZ;AAQLC,IAAAA,KAAK,EAAE;AARF,GADqB;AAW5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,4BACU;AACf,aAAO,KAAKC,MAAL,CAAYX,KAAZ,CAAkBC,WAAzB;AACD;AAHM,GAXmB;AAgB5BW,EAAAA,SAAS,EAAE;AACTC,IAAAA,UADS,sBACEb,KADF,EACS,CAEjB,CAHQ;AAITc,IAAAA,eAJS,2BAIOd,KAJP,EAIcC,WAJd,EAI2B;AAClCD,MAAAA,KAAK,CAACC,WAAN,GAAoBA,WAApB;AACD;AANQ,GAhBiB;AAwB5Bc,EAAAA,OAAO,EAAE;AACDC,IAAAA,gBADC,8BACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACJlB,WAAW,CAACmB,aAAZ,CAA0B,YAA1B,CADI;;AAAA;AACjBC,gBAAAA,IADiB;AAEvB;AACAC,gBAAAA,MAAM,CAAC,iBAAD,EAAoBD,IAApB,CAAN;;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB;AALM,GAxBmB;AAgC5BE,EAAAA,OAAO,EAAE;AAhCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\nimport { HttpService } from \"@/services/HttpService\";\n\nconst httpService = new HttpService();\n\nexport default new Vuex.Store({\n  state: {\n    ingredients: [],\n    pizzaTypes: [],\n    sizes: [],\n    doughs: [],\n    menuPizzas: [],\n    beverages: [],\n    isAuthenticated: false,\n    token: '',\n  },\n  getters: {\n    getIngredients() {\n      return this.$store.state.ingredients;\n    }\n  },\n  mutations: {\n    initialize(state) {\n\n    },\n    SET_INGREDIENTS(state, ingredients) {\n      state.ingredients = ingredients;\n    }\n  },\n  actions: {\n    async fetchIngredients() {\n      const data = await httpService.getMenuEntity(\"Ingredient\");\n      debugger\n      commit('SET_INGREDIENTS', data);\n    }\n\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}