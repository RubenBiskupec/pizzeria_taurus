{"ast":null,"code":"import _classCallCheck from \"/home/ruben/Documents/tech-web/pizzeria-taurus/taurus_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ruben/Documents/tech-web/pizzeria-taurus/taurus_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport axios from 'axios';\nexport var HttpService = /*#__PURE__*/function () {\n  function HttpService() {\n    _classCallCheck(this, HttpService);\n  }\n\n  _createClass(HttpService, [{\n    key: \"constructior\",\n    value: function constructior() {\n      this.backendPath = process.env.BACKEND_PATH;\n      this.customersPath = \"customers/\";\n    } // TODO fix\n\n  }, {\n    key: \"signUp\",\n    value: function signUp(signUpFormData, successCallback, errorCallback) {\n      var _this = this;\n\n      var url = this.backendPath + this.customersPath;\n      axios.post(url, signUpFormData).then(function (response) {\n        successCallback(response.data);\n        _this.signUpNotification = \"Account creato con successo. Accedi!\";\n      }).catch(function (error) {\n        // TODO gestici i diversi tipi di errore\n        _this.signUpErrors.push(\"Qualcosa e' andato storto. Per favore riprova.\");\n\n        console.log(JSON.stringify(error));\n      });\n    }\n  }]);\n\n  return HttpService;\n}();","map":{"version":3,"sources":["/home/ruben/Documents/tech-web/pizzeria-taurus/taurus_frontend/src/services/HttpService.js"],"names":["axios","HttpService","backendPath","process","env","BACKEND_PATH","customersPath","signUpFormData","successCallback","errorCallback","url","post","then","response","data","signUpNotification","catch","error","signUpErrors","push","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WAEI,wBAAe;AACX,WAAKC,WAAL,GAAmBC,OAAO,CAACC,GAAR,CAAYC,YAA/B;AACA,WAAKC,aAAL,GAAqB,YAArB;AACH,KALL,CAOI;;AAPJ;AAAA;AAAA,WAQI,gBAAOC,cAAP,EAAuBC,eAAvB,EAAwCC,aAAxC,EAAuD;AAAA;;AACnD,UAAIC,GAAG,GAAG,KAAKR,WAAL,GAAmB,KAAKI,aAAlC;AACAN,MAAAA,KAAK,CACFW,IADH,CACQD,GADR,EACaH,cADb,EAEGK,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBL,QAAAA,eAAe,CAACK,QAAQ,CAACC,IAAV,CAAf;AACA,QAAA,KAAI,CAACC,kBAAL,GAA0B,sCAA1B;AACD,OALH,EAMGC,KANH,CAMS,UAAAC,KAAK,EAAI;AACZ;AACA,QAAA,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,gDAAvB;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAZ;AACH,OAVH;AAWH;AArBL;;AAAA;AAAA","sourcesContent":["import axios from 'axios';\n\nexport class HttpService {\n\n    constructior() {\n        this.backendPath = process.env.BACKEND_PATH;\n        this.customersPath = \"customers/\"\n    }\n\n    // TODO fix\n    signUp(signUpFormData, successCallback, errorCallback) {\n        let url = this.backendPath + this.customersPath;\n        axios\n          .post(url, signUpFormData)\n          .then(response => {\n            successCallback(response.data);\n            this.signUpNotification = \"Account creato con successo. Accedi!\";\n          })\n          .catch(error => {\n              // TODO gestici i diversi tipi di errore\n              this.signUpErrors.push(\"Qualcosa e' andato storto. Per favore riprova.\");\n              console.log(JSON.stringify(error));\n          });\n    }\n}"]},"metadata":{},"sourceType":"module"}